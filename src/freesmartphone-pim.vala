/* Generated by vala-dbus-binding-tool. Do not modify! */
/* Generated with: /usr/local/bin/vala-dbus-binding-tool --api-path=/local/pkg/fso/specs/xml/ --directory=./ --strip-namespace=org --rename-namespace=freedesktop:FreeDesktop --rename-namespace=freesmartphone:FreeSmartphone */
using DBus;
using GLib;

namespace FreeSmartphone {

	namespace PIM {

		[DBus (name = "org.freesmartphone.PIM.MessageQuery")]
		public interface MessageQuery : GLib.Object {

			public abstract int get_result_count() yields throws DBus.Error;

			public abstract void rewind() yields throws DBus.Error;

			public abstract void skip(int count) yields throws DBus.Error;

			public abstract string get_message_path() yields throws DBus.Error;

			public abstract GLib.HashTable<string, GLib.Value?> get_result() yields throws DBus.Error;

			public abstract GLib.HashTable<string, GLib.Value?>[] get_multiple_results(int count) yields throws DBus.Error;

			public abstract void dispose_() yields throws DBus.Error;
		}

		[DBus (name = "org.freesmartphone.PIM.Calls")]
		public interface Calls : GLib.Object {

			public abstract string add(GLib.HashTable<string, GLib.Value?> call_data) yields throws DBus.Error;

			public abstract string get_single_call_single_field(GLib.HashTable<string, GLib.Value?> query, string field) yields throws DBus.Error;

			public abstract string query(GLib.HashTable<string, GLib.Value?> query) yields throws DBus.Error;

			public signal void new_call(string call_path);

			public signal void new_missed_calls(int amount);
		}

		[DBus (name = "org.freesmartphone.PIM.MessageFolder")]
		public interface MessageFolder : GLib.Object {

			public abstract int get_message_count() yields throws DBus.Error;

			public abstract string[] get_message_paths(int first, int count) yields throws DBus.Error;

			public signal void message_moved(string message_path, string new_folder);
		}

		[DBus (name = "org.freesmartphone.PIM.CallQuery")]
		public interface CallQuery : GLib.Object {

			public abstract int get_result_count() yields throws DBus.Error;

			public abstract void rewind() yields throws DBus.Error;

			public abstract void skip(int count) yields throws DBus.Error;

			public abstract string get_call_path() yields throws DBus.Error;

			public abstract GLib.HashTable<string, GLib.Value?> get_result() yields throws DBus.Error;

			public abstract GLib.HashTable<string, GLib.Value?>[] get_multiple_results(int count) throws DBus.Error;

			public abstract void dispose_() yields throws DBus.Error;
		}

		[DBus (name = "org.freesmartphone.PIM.Sources")]
		public interface Sources : GLib.Object {

			public abstract void init_all_entries() yields throws DBus.Error;

			public abstract int get_entry_count() yields throws DBus.Error;

			public abstract string[] get_domains() throws DBus.Error;

			public abstract string get_default_backend(string domain) throws DBus.Error;
		}

		[DBus (name = "org.freesmartphone.PIM.Contact")]
		public interface Contact : GLib.Object {

			public abstract GLib.HashTable<string, GLib.Value?> get_content() yields throws DBus.Error;

			public abstract GLib.HashTable<string, GLib.Value?> get_multiple_fields(string field_list) yields throws DBus.Error;

			public abstract string[] get_used_backends() throws DBus.Error;

			public abstract void update(GLib.HashTable<string, GLib.Value?> contact_data) yields throws DBus.Error;

			public abstract void delete() yields throws DBus.Error;
		}

		[DBus (name = "org.freesmartphone.PIM.Contacts")]
		public interface Contacts : GLib.Object {

			public abstract string add(GLib.HashTable<string, GLib.Value?> contact_data) yields throws DBus.Error;

			public abstract string get_single_contact_single_field(GLib.HashTable<string, GLib.Value?> query, string field) yields throws DBus.Error;

			public abstract string query(GLib.HashTable<string, GLib.Value?> query) yields throws DBus.Error;

			public signal void new_contact(string contact_path);
		}

		[DBus (name = "org.freesmartphone.PIM.ContactQuery")]
		public interface ContactQuery : GLib.Object {

			public abstract int get_result_count() yields throws DBus.Error;

			public abstract void rewind() yields throws DBus.Error;

			public abstract void skip(int count) yields throws DBus.Error;

			public abstract string get_contact_path() yields throws DBus.Error;

			public abstract GLib.HashTable<string, GLib.Value?> get_result() yields throws DBus.Error;

			public abstract GLib.HashTable<string, GLib.Value?>[] get_multiple_results(int count) throws DBus.Error;

			public abstract void dispose_() yields throws DBus.Error;
		}

		[DBus (name = "org.freesmartphone.PIM.Messages")]
		public interface Messages : GLib.Object {

			public abstract string add(GLib.HashTable<string, GLib.Value?> message_data) yields throws DBus.Error;

			public abstract string get_single_message_single_field(GLib.HashTable<string, GLib.Value?> query, string field) yields throws DBus.Error;

			public abstract string query(GLib.HashTable<string, GLib.Value?> query) yields throws DBus.Error;

			public abstract string[] get_folder_names() yields throws DBus.Error;

			public abstract string get_folder_path_from_name(string folder_name) yields throws DBus.Error;

			public signal void new_message(string message_path);

			public signal void incoming_message(string message_path);

			public signal void unread_messages(int amount);
		}

		[DBus (name = "org.freesmartphone.PIM.Source")]
		public interface Source : GLib.Object {

			public abstract string get_name() yields throws DBus.Error;

			public abstract string get_status() yields throws DBus.Error;

			public abstract string[] get_supported_p_i_m_domains() yields throws DBus.Error;

			public abstract void enable() throws DBus.Error;

			public abstract void disable() throws DBus.Error;

			public abstract bool get_enabled() throws DBus.Error;

			public abstract string[] get_properties() throws DBus.Error;

			public abstract void set_as_default(string domain) throws DBus.Error;
		}

		[DBus (name = "org.freesmartphone.PIM.Call")]
		public interface Call : GLib.Object {

			public abstract GLib.HashTable<string, GLib.Value?> get_content() yields throws DBus.Error;

			public abstract GLib.HashTable<string, GLib.Value?> get_multiple_fields(string field_list) yields throws DBus.Error;

			public abstract string[] get_used_backends() throws DBus.Error;

			public abstract void update(GLib.HashTable<string, GLib.Value?> call_data) yields throws DBus.Error;

			public abstract void delete() yields throws DBus.Error;
		}

		[DBus (name = "org.freesmartphone.PIM.Message")]
		public interface Message : GLib.Object {

			public abstract GLib.HashTable<string, GLib.Value?> get_content() yields throws DBus.Error;

			public abstract void get_multiple_fields(string field_list) yields throws DBus.Error;

			public abstract void move_to_folder(string folder_name) yields throws DBus.Error;

			public abstract void update(GLib.HashTable<string, GLib.Value?> message_data) yields throws DBus.Error;

			public abstract void delete() yields throws DBus.Error;
		}
	}
}
